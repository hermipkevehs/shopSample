{"version":3,"sources":["webpack:///./src/templates/product-template.js","webpack:///./src/styles/ProductStyles.js"],"names":["ComponentName","data","products","img","productName","productSize","productColor","price","productInfo","shippingInfo","console","log","useState","clicked","setClick","Provider","value","size","className","fluid","style","width","map","image","index","onClick","handleClick","Mode","type","id","htmlFor","Options","option","Courier","Days","Price","color","content","name","disabled","selected","hidden","min","max","placeholder","Color","styled","div","props","Background","ModalWrapper"],"mappings":"4FAAA,iHA0HeA,UAlHO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAG7BA,EADDC,SAAYC,EAFkB,EAElBA,IAAKC,EAFa,EAEbA,YAAaC,EAFA,EAEAA,YAAaC,EAFb,EAEaA,aAAcC,EAF3B,EAE2BA,MAAOC,EAFlC,EAEkCA,YAAaC,EAF/C,EAE+CA,aAEhFC,QAAQC,IAAIV,GAJqB,MAMLW,oBAAS,GAA9BC,EAN0B,KAMjBC,EANiB,KAWjC,OACG,kBAAC,IAAD,KACG,kBAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,KAAM,WAClC,6BAASC,UAAU,UAChB,6BAASA,UAAU,uBAChB,6BACG,kBAAC,IAAD,eADH,IACuB,kBAAC,IAAD,eADvB,oBAGA,yBAAKA,UAAU,qBACZ,kBAAC,IAAD,MACA,6CACA,kBAAC,IAAD,QAGN,6BAASA,UAAU,8CAChB,6BAAML,EAAU,kBAAC,IAAD,CAAOM,MAAOhB,EAAI,GAAGgB,MAAOC,MAAO,CAAEC,MAAO,WAAgB,kBAAC,IAAD,CAAOF,MAAOhB,EAAI,GAAGgB,MAAOC,MAAO,CAAEC,MAAO,YACxH,yBAAKH,UAAU,kBACXf,EAAImB,KAAI,SAACC,EAAOC,GACd,OACG,yBAAKC,QAAS,kBAtBlB,SAACD,GACJV,EAAJ,IAAVU,GAqByCE,CAAYF,IAAQN,UAAU,kBAC/C,kBAAC,IAAD,CAAOC,MAAOI,EAAMJ,MAAOC,MAAO,CAAEC,MAAO,gBAM1D,6BAASH,UAAU,kCAChB,yBAAKA,UAAU,aACZ,6BACG,wBAAIA,UAAU,aAAad,GAC3B,uBAAGc,UAAU,QAAQV,EAAYA,cAEpC,yBAAKU,UAAU,aACZ,6CACA,6BACG,+CACA,0BAAMA,UAAU,kBACZT,EAAakB,KAAKL,KAAI,SAACM,GACrB,OACG,6BACG,2BAAOA,KAAK,QAAQC,GAAID,IAD3B,IACoC,2BAAOE,QAASF,GAAOA,SAMvE,6BACG,uCACA,+BACInB,EAAasB,QAAQT,KAAI,SAACU,GACxB,OACG,wBAAId,UAAU,IACX,wBAAIA,UAAU,aACX,2BAAOU,KAAK,QAAQC,GAAIG,EAAOC,UAC/B,2BAAOH,QAASE,EAAOC,SAAUD,EAAOC,UAE3C,wBAAIf,UAAU,oBACX,2BAAIc,EAAOE,OAEd,wBAAIhB,UAAU,eACX,2BAAIc,EAAOG,gBASnC,yBAAKjB,UAAU,aACZ,mCAASX,EAAT,OACA,6BACG,qCACA,yBAAKW,UAAU,kBACXZ,EAAagB,KAAI,SAACc,GAChB,OAAO,kBAAC,IAAD,CAAOA,MAAOA,EAAMC,eAIpC,yBAAKnB,UAAU,QACZ,0BAAMA,UAAU,aACb,oCACA,4BAAQW,GAAG,QAAQS,KAAK,QAAQpB,UAAU,oDACvC,4BAAQF,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,eAGCpC,EAAYiB,KAAI,SAACL,GACf,OAAO,4BAAQD,MAAOC,EAAKoB,SAAUpB,EAAKoB,aAGhD,wCACA,2BAAOT,KAAK,SAASc,IAAI,IAAIC,IAAI,UAAUzB,UAAU,0CAA0C0B,YAAY,QAGjH,4BAAQ1B,UAAU,0BAAlB,sB,kCCjHrB,sHAEa2B,EAAQC,IAAOC,IAAV,0EAAGD,CAAH,2EACK,SAACE,GAAD,OAAWA,EAAMZ,SAK3Ba,EAAaH,IAAOC,IAAV,+EAAGD,CAAH,+IAYVI,EAAeJ,IAAOC,IAAV,iFAAGD,CAAH","file":"component---src-templates-product-template-js-d0254905c2d7cb36f786.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport Image from \"gatsby-image\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Color } from \"../styles/ProductStyles\";\r\n\r\nconst ComponentName = ({ data }) => {\r\n   const {\r\n      products: { img, productName, productSize, productColor, price, productInfo, shippingInfo },\r\n   } = data;\r\n   console.log(data);\r\n\r\n   const [clicked, setClick] = useState(false);\r\n\r\n   const handleClick = (index) => {\r\n      index === 0 ? setClick(false) : setClick(true);\r\n   };\r\n   return (\r\n      <Layout>\r\n         <IconContext.Provider value={{ size: \"1.5rem\" }}>\r\n            <article className=\"my-20 \">\r\n               <section className=\"flex justify-around\">\r\n                  <div>\r\n                     <Link> Home </Link>/<Link> Shop </Link> /I am a product\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                     <FaChevronLeft />\r\n                     <span>Prev | Next</span>\r\n                     <FaChevronRight />\r\n                  </div>\r\n               </section>\r\n               <section className=\"flex flex-col items-center space-y-4 py-24\">\r\n                  <div>{clicked ? <Image fluid={img[1].fluid} style={{ width: \"50rem\" }} /> : <Image fluid={img[0].fluid} style={{ width: \"50rem\" }} />}</div>\r\n                  <div className=\"flex space-x-4\">\r\n                     {img.map((image, index) => {\r\n                        return (\r\n                           <div onClick={() => handleClick(index)} className=\"cursor-pointer\">\r\n                              <Image fluid={image.fluid} style={{ width: \"5rem\" }} />\r\n                           </div>\r\n                        );\r\n                     })}\r\n                  </div>\r\n               </section>\r\n               <section className=\"flex space-x-56 justify-center\">\r\n                  <div className=\"space-y-8\">\r\n                     <div>\r\n                        <h5 className=\"font-bold\">{productName}</h5>\r\n                        <p className=\"w-96\">{productInfo.productInfo}</p>\r\n                     </div>\r\n                     <div className=\"space-y-4\">\r\n                        <h5>Shipping Info</h5>\r\n                        <div>\r\n                           <h6>Mode of Payment</h6>\r\n                           <form className=\"flex space-x-8\">\r\n                              {shippingInfo.Mode.map((type) => {\r\n                                 return (\r\n                                    <div>\r\n                                       <input type=\"radio\" id={type} /> <label htmlFor={type}>{type}</label>\r\n                                    </div>\r\n                                 );\r\n                              })}\r\n                           </form>\r\n                        </div>\r\n                        <div>\r\n                           <h6>Options</h6>\r\n                           <table>\r\n                              {shippingInfo.Options.map((option) => {\r\n                                 return (\r\n                                    <tr className=\"\">\r\n                                       <td className=\"space-x-4\">\r\n                                          <input type=\"radio\" id={option.Courier} />\r\n                                          <label htmlFor={option.Courier}>{option.Courier}</label>\r\n                                       </td>\r\n                                       <td className=\"text-center px-5\">\r\n                                          <p>{option.Days}</p>\r\n                                       </td>\r\n                                       <td className=\"text-center\">\r\n                                          <p>{option.Price}</p>\r\n                                       </td>\r\n                                    </tr>\r\n                                 );\r\n                              })}\r\n                           </table>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"space-y-6\">\r\n                     <h5>Php {price}.00</h5>\r\n                     <div>\r\n                        <h6>Color</h6>\r\n                        <div className=\"flex space-x-4\">\r\n                           {productColor.map((color) => {\r\n                              return <Color color={color.content}></Color>;\r\n                           })}\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"py-2\">\r\n                        <form className=\"space-y-2\">\r\n                           <h6>Size</h6>\r\n                           <select id=\"sizes\" name=\"sizes\" className=\"text-black pr-8 pl-2 py-4 border border-gray-300\">\r\n                              <option value=\"\" disabled selected hidden>\r\n                                 Select Size\r\n                              </option>\r\n                              {productSize.map((size) => {\r\n                                 return <option value={size.content}>{size.content}</option>;\r\n                              })}\r\n                           </select>\r\n                           <h6>Quantity</h6>\r\n                           <input type=\"number\" min=\"1\" max=\"1000000\" className=\"border border-gray-300 text-center px-0\" placeholder=\"1\" />\r\n                        </form>\r\n                     </div>\r\n                     <button className=\"bg-blue-400 py-2 px-12\">Add to Cart</button>\r\n                  </div>\r\n               </section>\r\n            </article>\r\n         </IconContext.Provider>\r\n      </Layout>\r\n   );\r\n};\r\n\r\nexport default ComponentName;\r\n\r\nexport const query = graphql`\r\n   query getSingleProduct($product: String) {\r\n      products: contentfulECommerce(slug: { eq: $product }) {\r\n         img {\r\n            fluid {\r\n               ...GatsbyContentfulFluid\r\n            }\r\n         }\r\n         price\r\n         productName\r\n         productColor {\r\n            content\r\n         }\r\n         productInfo {\r\n            productInfo\r\n         }\r\n         productSize {\r\n            content\r\n         }\r\n         shippingInfo {\r\n            Mode\r\n            Options {\r\n               Courier\r\n               Days\r\n               Price\r\n            }\r\n         }\r\n      }\r\n   }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Color = styled.div`\r\n   background-color: ${(props) => props.color};\r\n   height: 1.5rem;\r\n   width: 1.5rem;\r\n   border-radius: 9999px;\r\n`;\r\nexport const Background = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   background: rgba(0, 0, 0, 0.8);\r\n   position: fixed;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   z-index: 10;\r\n   top: 0;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n   width: 800px;\r\n   height: 600px;\r\n   box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n   background: #fff;\r\n   color: #000;\r\n   display: grid;\r\n   grid-template-columns: 1fr 1fr;\r\n   position: relative;\r\n   z-index: 15;\r\n   border-radius: 10px;\r\n`;"],"sourceRoot":""}